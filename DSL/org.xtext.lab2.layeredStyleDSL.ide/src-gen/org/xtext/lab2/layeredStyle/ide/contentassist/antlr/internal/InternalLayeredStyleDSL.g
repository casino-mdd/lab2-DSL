/*
 * generated by Xtext 2.18.0
 */
grammar InternalLayeredStyleDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.lab2.layeredStyle.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.lab2.layeredStyle.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.lab2.layeredStyle.services.LayeredStyleDSLGrammarAccess;

}
@parser::members {
	private LayeredStyleDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(LayeredStyleDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleLayeredStyle
entryRuleLayeredStyle
:
{ before(grammarAccess.getLayeredStyleRule()); }
	 ruleLayeredStyle
{ after(grammarAccess.getLayeredStyleRule()); } 
	 EOF 
;

// Rule LayeredStyle
ruleLayeredStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayeredStyleAccess().getElementsAssignment()); }
		(rule__LayeredStyle__ElementsAssignment)*
		{ after(grammarAccess.getLayeredStyleAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayer
entryRuleLayer
:
{ before(grammarAccess.getLayerRule()); }
	 ruleLayer
{ after(grammarAccess.getLayerRule()); } 
	 EOF 
;

// Rule Layer
ruleLayer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayerAccess().getGroup()); }
		(rule__Layer__Group__0)
		{ after(grammarAccess.getLayerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayerSegment
entryRuleLayerSegment
:
{ before(grammarAccess.getLayerSegmentRule()); }
	 ruleLayerSegment
{ after(grammarAccess.getLayerSegmentRule()); } 
	 EOF 
;

// Rule LayerSegment
ruleLayerSegment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayerSegmentAccess().getGroup()); }
		(rule__LayerSegment__Group__0)
		{ after(grammarAccess.getLayerSegmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubRelation
entryRuleSubRelation
:
{ before(grammarAccess.getSubRelationRule()); }
	 ruleSubRelation
{ after(grammarAccess.getSubRelationRule()); } 
	 EOF 
;

// Rule SubRelation
ruleSubRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubRelationAccess().getAlternatives()); }
		(rule__SubRelation__Alternatives)
		{ after(grammarAccess.getSubRelationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getLayerParserRuleCall_0()); }
		ruleLayer
		{ after(grammarAccess.getAbstractElementAccess().getLayerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getRelationParserRuleCall_1()); }
		ruleRelation
		{ after(grammarAccess.getAbstractElementAccess().getRelationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRelation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubRelationAccess().getAllowedToUseKeyword_0()); }
		'AllowedToUse'
		{ after(grammarAccess.getSubRelationAccess().getAllowedToUseKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubRelationAccess().getAllowedToUseBelowKeyword_1()); }
		'AllowedToUseBelow'
		{ after(grammarAccess.getSubRelationAccess().getAllowedToUseBelowKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__0__Impl
	rule__Layer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getLayerKeyword_0()); }
	'layer'
	{ after(grammarAccess.getLayerAccess().getLayerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__1__Impl
	rule__Layer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getNameAssignment_1()); }
	(rule__Layer__NameAssignment_1)
	{ after(grammarAccess.getLayerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__2__Impl
	rule__Layer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLayerAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__3__Impl
	rule__Layer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getLayerSegmentsAssignment_3()); }
	(rule__Layer__LayerSegmentsAssignment_3)*
	{ after(grammarAccess.getLayerAccess().getLayerSegmentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layer__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLayerAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LayerSegment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerSegment__Group__0__Impl
	rule__LayerSegment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerSegment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerSegmentAccess().getSegmentKeyword_0()); }
	'segment'
	{ after(grammarAccess.getLayerSegmentAccess().getSegmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerSegment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LayerSegment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerSegment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayerSegmentAccess().getNameAssignment_1()); }
	(rule__LayerSegment__NameAssignment_1)
	{ after(grammarAccess.getLayerSegmentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationKeyword_0()); }
	'relation'
	{ after(grammarAccess.getRelationAccess().getRelationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getNameAssignment_1()); }
	(rule__Relation__NameAssignment_1)
	{ after(grammarAccess.getRelationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRelationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__3__Impl
	rule__Relation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getTypeKeyword_3()); }
	'type'
	{ after(grammarAccess.getRelationAccess().getTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__4__Impl
	rule__Relation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getRelationAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__5__Impl
	rule__Relation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getSubRelationParserRuleCall_5()); }
	ruleSubRelation
	{ after(grammarAccess.getRelationAccess().getSubRelationParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__6__Impl
	rule__Relation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getSourceKeyword_6()); }
	'source'
	{ after(grammarAccess.getRelationAccess().getSourceKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__7__Impl
	rule__Relation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getColonKeyword_7()); }
	':'
	{ after(grammarAccess.getRelationAccess().getColonKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__8__Impl
	rule__Relation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getTypeAssignment_8()); }
	(rule__Relation__TypeAssignment_8)
	{ after(grammarAccess.getRelationAccess().getTypeAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__9__Impl
	rule__Relation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getTargetKeyword_9()); }
	'target'
	{ after(grammarAccess.getRelationAccess().getTargetKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__10__Impl
	rule__Relation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getColonKeyword_10()); }
	':'
	{ after(grammarAccess.getRelationAccess().getColonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__11__Impl
	rule__Relation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getTypeAssignment_11()); }
	(rule__Relation__TypeAssignment_11)
	{ after(grammarAccess.getRelationAccess().getTypeAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getRelationAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LayeredStyle__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayeredStyleAccess().getElementsAbstractElementParserRuleCall_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getLayeredStyleAccess().getElementsAbstractElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLayerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layer__LayerSegmentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerAccess().getLayerSegmentsLayerSegmentParserRuleCall_3_0()); }
		ruleLayerSegment
		{ after(grammarAccess.getLayerAccess().getLayerSegmentsLayerSegmentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LayerSegment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayerSegmentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLayerSegmentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRelationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__TypeAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getTypeLayerCrossReference_8_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getTypeLayerIDTerminalRuleCall_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getTypeLayerIDTerminalRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getTypeLayerCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__TypeAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getTypeLayerCrossReference_11_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getTypeLayerIDTerminalRuleCall_11_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getTypeLayerIDTerminalRuleCall_11_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getTypeLayerCrossReference_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
