/**
 * generated by Xtext 2.18.0
 */
package org.xtext.lab2.layeredStyle.layeredStyleDSL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.lab2.layeredStyle.layeredStyleDSL.Layer;
import org.xtext.lab2.layeredStyle.layeredStyleDSL.LayerSegment;
import org.xtext.lab2.layeredStyle.layeredStyleDSL.LayeredStyleDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Layer</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.lab2.layeredStyle.layeredStyleDSL.impl.LayerImpl#getLayerSegments <em>Layer Segments</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LayerImpl extends AbstractElementImpl implements Layer
{
  /**
   * The cached value of the '{@link #getLayerSegments() <em>Layer Segments</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLayerSegments()
   * @generated
   * @ordered
   */
  protected EList<LayerSegment> layerSegments;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LayerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LayeredStyleDSLPackage.Literals.LAYER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<LayerSegment> getLayerSegments()
  {
    if (layerSegments == null)
    {
      layerSegments = new EObjectContainmentEList<LayerSegment>(LayerSegment.class, this, LayeredStyleDSLPackage.LAYER__LAYER_SEGMENTS);
    }
    return layerSegments;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LayeredStyleDSLPackage.LAYER__LAYER_SEGMENTS:
        return ((InternalEList<?>)getLayerSegments()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LayeredStyleDSLPackage.LAYER__LAYER_SEGMENTS:
        return getLayerSegments();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LayeredStyleDSLPackage.LAYER__LAYER_SEGMENTS:
        getLayerSegments().clear();
        getLayerSegments().addAll((Collection<? extends LayerSegment>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LayeredStyleDSLPackage.LAYER__LAYER_SEGMENTS:
        getLayerSegments().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LayeredStyleDSLPackage.LAYER__LAYER_SEGMENTS:
        return layerSegments != null && !layerSegments.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //LayerImpl
